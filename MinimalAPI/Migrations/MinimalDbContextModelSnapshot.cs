// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinimalAPI.Data;

#nullable disable

namespace MinimalAPI.Migrations
{
    [DbContext(typeof(MinimalDbContext))]
    partial class MinimalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MinimalAPI.Models.Interest", b =>
                {
                    b.Property<int>("InterestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestID"), 1L, 1);

                    b.Property<string>("InterestDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestID");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("MinimalAPI.Models.Link", b =>
                {
                    b.Property<int>("LinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkID"), 1L, 1);

                    b.Property<int>("InterestID")
                        .HasColumnType("int");

                    b.Property<string>("LinkURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.HasKey("LinkID");

                    b.HasIndex("InterestID");

                    b.HasIndex("PersonID");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("MinimalAPI.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("MinimalAPI.Models.PersonInterest", b =>
                {
                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<int>("InterestID")
                        .HasColumnType("int");

                    b.HasKey("PersonID", "InterestID");

                    b.HasIndex("InterestID");

                    b.ToTable("PersonInterests");
                });

            modelBuilder.Entity("MinimalAPI.Models.Link", b =>
                {
                    b.HasOne("MinimalAPI.Models.Interest", "Interest")
                        .WithMany("Links")
                        .HasForeignKey("InterestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinimalAPI.Models.Person", "Person")
                        .WithMany("Links")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MinimalAPI.Models.PersonInterest", b =>
                {
                    b.HasOne("MinimalAPI.Models.Interest", "Interest")
                        .WithMany("PersonInterests")
                        .HasForeignKey("InterestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinimalAPI.Models.Person", "Person")
                        .WithMany("PersonInterests")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MinimalAPI.Models.Interest", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("PersonInterests");
                });

            modelBuilder.Entity("MinimalAPI.Models.Person", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("PersonInterests");
                });
#pragma warning restore 612, 618
        }
    }
}
